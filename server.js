 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var request = require('request');
var query = require('query-string');
var express = require('express');
var mongodb = require('mongodb').MongoClient;
var app = express();

const ENDPOINT = "https://www.googleapis.com/customsearch/v1";

function save_search(query) {
  mongodb.connect(process.env.MONGO_URI, function(err, db) {
    if (err) throw err;
    db.collection("searches").insert({
      term: query,
      when: new Date()
    })
  });
}

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    })

app.get('/api/latestsearches', function(req, res) {
  mongodb.connect(process.env.MONGO_URI, function(err, db) {
    if (err) throw err;
    var offset = req.query.offset || 0;
    var count = req.query.count || 10;
    db.collection("searches").find().skip(offset).limit(count).toArray(function(err, data) {
      if (err) throw err;
      db.close();
      res.json(data);
    });
  });
});

app.get('/api/imagesearch', function(req, res) {
  request(ENDPOINT + "?" + query.stringify({
    q: req.query.q,
    num: req.query.num || 10,
    start: +req.query.offset + 1,
    imgSize: "small",
    searchType: "image",
    key: process.env.API_KEY,
    cx: process.env.GOOGLE_CX
  }), function(err, response, body) {
    if (err) throw err;
    var items = JSON.parse(body).items;
    var results = items.map(function(item) {
      return {
        url: item.link,
        snippet: item.snippet,
        thumbnail: item.image.thumbnailLink,
        context: item.image.contextLink
      }
    });
    res.json(results);
  });
});

// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

